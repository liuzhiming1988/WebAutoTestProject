2016-04-07 03:51:43,557 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('项目1', '项目1-测试计划5', '20160407035135')
2016-04-07 03:51:43,568 htmlreporter.py[line: 106] INFO: 正在记录测试测试计划[project：项目1, testplan：项目1-测试计划5]的测试用例运行结果到测试报告
2016-04-07 03:51:43,569 htmlreporter.py[line: 116] INFO: 正在查询已运的测试计划
2016-04-07 03:51:43,569 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160407035135',)
2016-04-07 03:51:43,573 htmlreporter.py[line: 128] INFO: 正在查询测试计划[project：项目1, testplan：项目1-测试计划1]已运行的测试用例
2016-04-07 03:51:43,574 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('项目1', '项目1-测试计划1', '20160407035135')
2016-04-07 03:51:43,577 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=39]步骤运行结果
2016-04-07 03:51:43,577 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划1', 39, '20160407035135')
2016-04-07 03:51:43,583 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=58]步骤运行结果
2016-04-07 03:51:43,583 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划1', 58, '20160407035135')
2016-04-07 03:51:43,587 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=54]步骤运行结果
2016-04-07 03:51:43,587 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划1', 54, '20160407035135')
2016-04-07 03:51:43,590 htmlreporter.py[line: 128] INFO: 正在查询测试计划[project：项目1, testplan：项目1-测试计划5]已运行的测试用例
2016-04-07 03:51:43,591 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('项目1', '项目1-测试计划5', '20160407035135')
2016-04-07 03:51:43,594 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=39]步骤运行结果
2016-04-07 03:51:43,594 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划5', 39, '20160407035135')
2016-04-07 03:51:43,598 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=58]步骤运行结果
2016-04-07 03:51:43,598 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划5', 58, '20160407035135')
2016-04-07 03:51:43,600 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=54]步骤运行结果
2016-04-07 03:51:43,601 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划5', 54, '20160407035135')
2016-04-07 03:51:43,605 htmlreporter.py[line: 178] INFO: 正在设置测试报告结果文件名
2016-04-07 03:51:43,605 htmlreporter.py[line: 188] INFO: 测试报告文件名所在路径为：F:\\project\\report\\test_report20160407035135.html
2016-04-07 03:51:43,605 htmlreporter.py[line: 181] INFO: 正在生成测试报告
2016-04-07 03:51:43,612 main.py[line: 252] INFO: 生成测试报告成功
2016-04-07 03:51:44,863 main.py[line: 259] INFO: F:\\project\\report\\test_report20160407035135.html
2016-04-07 03:51:44,864 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-04-07 03:51:45,333 main.py[line: 266] INFO: 发送邮件成功
2016-04-07 03:51:51,021 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-04-07 03:51:51,040 globalpy.py[line: 17] INFO: 正在获取testlink
2016-04-07 03:51:51,171 main.py[line: 61] INFO: 正在创建测试用例报告报表
2016-04-07 03:51:51,172 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-04-07 03:51:51,174 main.py[line: 64] INFO: 正在创建测试步骤报告报表
2016-04-07 03:51:51,174 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-04-07 03:51:51,176 main.py[line: 67] INFO: 正在读取运行模式配置
2016-04-07 03:51:51,180 main.py[line: 72] INFO: 按项目运行测试
2016-04-07 03:51:51,180 main.py[line: 108] INFO: 运行指定项目
2016-04-07 03:51:51,369 main.py[line: 124] INFO: 正在读取测项目[id：1, project：项目1]的协议，host，端口配置...
2016-04-07 03:51:51,369 main.py[line: 127] INFO: 成功读取配置信息：{"protocol":"http","host":"gc.ditu.aliyun.com","port":80}
2016-04-07 03:51:51,371 main.py[line: 143] INFO: 正在执行测试项目[id：1, project：项目1]
2016-04-07 03:51:51,371 testproject.py[line: 22] INFO: 正在获取测试项目[id：1, name：项目1]对应对应的测试计划名称列表
2016-04-07 03:51:51,566 testproject.py[line: 27] INFO: 成功获取项目测试计划名称列表[list=['项目1-测试计划1', '项目1-测试计划2', '项目1-测试计划3', '项目1-测试计划4', '项目1-测试计划5']]
2016-04-07 03:51:51,765 testproject.py[line: 37] INFO: 正在执行项目测试计划[project：项目1，testplan：项目1-测试计划1]
2016-04-07 03:51:51,765 testplan.py[line: 29] INFO: 正在获取测试计划[project=项目1，name=项目1-测试计划1]的测试用例
2016-04-07 03:51:51,955 testplan.py[line: 35] INFO: 成功获取测试计划[project=项目1，name=项目1-测试计划1]的测试用例id：dict_keys(['54', '58', '39'])
2016-04-07 03:51:52,494 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-04-07 03:51:52,494 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 54, '根据经纬度获取地区名', '根据经纬度获取地区名接口', '项目1-测试计划1', '项目1', 'Block', '')
2016-04-07 03:51:52,497 testplan.py[line: 60] INFO: 开始执行测试用例[id=54，name=根据经纬度获取地区名]
2016-04-07 03:51:52,497 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-04-07 03:51:52,498 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 54, '根据经纬度获取地区名', '项目1-测试计划1', '项目1', 61, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"class":"Regeocoding","function":"test_regeocoding","method":"get","url":"/regeocoding?","params":[{"l":"39.938133,116.395739","type":"100"}]}', '{"name":"地安门外大街"}', 'Block', '', '')
2016-04-07 03:51:52,500 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-04-07 03:51:52,501 casestep.py[line: 58] INFO: 调用的方法为：Regeocoding.test_regeocoding
2016-04-07 03:51:52,501 regeocoding.py[line: 24] INFO: 正在发起GET请求...
2016-04-07 03:51:52,501 httpprotocol.py[line: 51] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/regeocoding?type=100&l=39.938133%2C116.395739
2016-04-07 03:51:52,600 regeocoding.py[line: 27] INFO: 正在解析返回结果
2016-04-07 03:51:52,600 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-04-07 03:51:52,600 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-04-07 03:51:52" WHERE executed_history_id = 20160407035151 AND testcase_id = 54 AND step_id = 61 AND project='项目1' AND testplan='项目1-测试计划1'
2016-04-07 03:51:52,604 testcase.py[line: 101] INFO: 测试用例[id=54, name=根据经纬度获取地区名]执行成功
2016-04-07 03:51:52,605 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-04-07 03:51:52,605 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-04-07 03:51:52" WHERE executed_history_id = 20160407035151 AND testcase_id = 54 AND project='项目1' AND testplan='项目1-测试计划1'
2016-04-07 03:51:52,951 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=2, bulid_version=测试计划1-Version1.0.2],对应用例[testcase_id=54]的执行结果
2016-04-07 03:51:53,578 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-04-07 03:51:53,579 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 58, '测试用例名2', '根据经纬度获取地区名接口', '项目1-测试计划1', '项目1', 'Block', '')
2016-04-07 03:51:53,582 testplan.py[line: 60] INFO: 开始执行测试用例[id=58，name=测试用例名2]
2016-04-07 03:51:53,582 testcase.py[line: 26] WARNING: 用例[name=测试用例名2]处于禁用状态[active=0]，不执行
2016-04-07 03:51:53,583 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-04-07 03:51:53,583 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Block", runtime="2016-04-07 03:51:53" WHERE executed_history_id = 20160407035151 AND testcase_id = 58 AND project='项目1' AND testplan='项目1-测试计划1'
2016-04-07 03:51:53,793 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=2, bulid_version=测试计划1-Version1.0.2],对应用例[testcase_id=58]的执行结果
2016-04-07 03:51:54,169 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-04-07 03:51:54,170 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 39, '获取ip信息接口', '根据地区名获取经纬度接口', '项目1-测试计划1', '项目1', 'Block', '')
2016-04-07 03:51:54,174 testplan.py[line: 60] INFO: 开始执行测试用例[id=39，name=获取ip信息接口]
2016-04-07 03:51:54,174 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-04-07 03:51:54,174 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 39, '获取ip信息接口', '项目1-测试计划1', '项目1', 41, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"class":"IPQuery","function": "test_get_address_info","method":"get", "url":"/ipquery","params":""}', '{"city_name":"深圳市"}', 'Block', '', '')
2016-04-07 03:51:54,177 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-04-07 03:51:54,177 casestep.py[line: 58] INFO: 调用的方法为：IPQuery.test_get_address_info
2016-04-07 03:51:54,179 ipquery.py[line: 25] INFO: 正在发起GET请求...
2016-04-07 03:51:54,179 httpprotocol.py[line: 51] INFO: 发起的请求为：http://ip.ws.126.net:80/ipquery
2016-04-07 03:51:54,268 ipquery.py[line: 31] INFO: 正在更新步骤端口，主机，协议等配置信息: UPDATE case_step_report_tb SET protocol="http",host="ditu.amap.com", port="80"WHERE executed_history_id = 20160407035151 and testcase_id = 39 and step_id = 41
2016-04-07 03:51:54,269 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET protocol="http",host="ditu.amap.com", port="80"WHERE executed_history_id = 20160407035151 and testcase_id = 39 and step_id = 41
2016-04-07 03:51:54,278 ipquery.py[line: 34] INFO: 正在解析返回结果
2016-04-07 03:51:54,279 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-04-07 03:51:54,280 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-04-07 03:51:54" WHERE executed_history_id = 20160407035151 AND testcase_id = 39 AND step_id = 41 AND project='项目1' AND testplan='项目1-测试计划1'
2016-04-07 03:51:54,290 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-04-07 03:51:54,291 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 39, '获取ip信息接口', '项目1-测试计划1', '项目1', 42, 2, '', 'http', 'gc.ditu.aliyun.com', 80, '{"class":"GeoCoding","function": "test_get_ip_info","method":"get", "url":"/geocoding?","params":[{"a":"$city_name"}]}', '{"lon":114.05786,"lat":22.54309}', 'Block', '', '')
2016-04-07 03:51:54,294 testcase.py[line: 60] INFO: 开始执行步骤操作[第2步]
2016-04-07 03:51:54,294 casestep.py[line: 58] INFO: 调用的方法为：GeoCoding.test_get_ip_info
2016-04-07 03:51:54,294 geocoding.py[line: 22] INFO: 正在发起GET请求...
2016-04-07 03:51:54,295 httpprotocol.py[line: 51] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/geocoding?a=%E6%B7%B1%E5%9C%B3%E5%B8%82
2016-04-07 03:51:54,412 geocoding.py[line: 37] INFO: 正在解析返回结果
2016-04-07 03:51:54,413 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-04-07 03:51:54,413 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-04-07 03:51:54" WHERE executed_history_id = 20160407035151 AND testcase_id = 39 AND step_id = 42 AND project='项目1' AND testplan='项目1-测试计划1'
2016-04-07 03:51:54,416 testcase.py[line: 101] INFO: 测试用例[id=39, name=获取ip信息接口]执行成功
2016-04-07 03:51:54,416 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-04-07 03:51:54,416 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-04-07 03:51:54" WHERE executed_history_id = 20160407035151 AND testcase_id = 39 AND project='项目1' AND testplan='项目1-测试计划1'
2016-04-07 03:51:54,638 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=2, bulid_version=测试计划1-Version1.0.2],对应用例[testcase_id=39]的执行结果
2016-04-07 03:51:54,878 testplan.py[line: 85] INFO: 测试计划[project=项目1 ,testplan=项目1-测试计划1]已执行完
2016-04-07 03:51:55,057 testproject.py[line: 37] INFO: 正在执行项目测试计划[project：项目1，testplan：项目1-测试计划2]
2016-04-07 03:51:55,057 testplan.py[line: 29] INFO: 正在获取测试计划[project=项目1，name=项目1-测试计划2]的测试用例
2016-04-07 03:51:55,329 testplan.py[line: 35] INFO: 成功获取测试计划[project=项目1，name=项目1-测试计划2]的测试用例id：dict_keys(['28'])
2016-04-07 03:51:55,329 testplan.py[line: 38] WARNING: 测试计划[project=项目1，name=项目1-测试计划2]处于不活动状态[active=0]，不执行
2016-04-07 03:51:55,557 testproject.py[line: 37] INFO: 正在执行项目测试计划[project：项目1，testplan：项目1-测试计划3]
2016-04-07 03:51:55,558 testplan.py[line: 29] INFO: 正在获取测试计划[project=项目1，name=项目1-测试计划3]的测试用例
2016-04-07 03:51:55,811 testplan.py[line: 32] WARNING: 未获取到测试用例
2016-04-07 03:51:56,030 testproject.py[line: 37] INFO: 正在执行项目测试计划[project：项目1，testplan：项目1-测试计划4]
2016-04-07 03:51:56,031 testplan.py[line: 29] INFO: 正在获取测试计划[project=项目1，name=项目1-测试计划4]的测试用例
2016-04-07 03:51:56,215 testplan.py[line: 32] WARNING: 未获取到测试用例
2016-04-07 03:51:56,397 testproject.py[line: 37] INFO: 正在执行项目测试计划[project：项目1，testplan：项目1-测试计划5]
2016-04-07 03:51:56,398 testplan.py[line: 29] INFO: 正在获取测试计划[project=项目1，name=项目1-测试计划5]的测试用例
2016-04-07 03:51:56,602 testplan.py[line: 35] INFO: 成功获取测试计划[project=项目1，name=项目1-测试计划5]的测试用例id：dict_keys(['54', '58', '39'])
2016-04-07 03:51:57,013 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-04-07 03:51:57,013 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 54, '根据经纬度获取地区名', '根据经纬度获取地区名接口', '项目1-测试计划5', '项目1', 'Block', '')
2016-04-07 03:51:57,017 testplan.py[line: 60] INFO: 开始执行测试用例[id=54，name=根据经纬度获取地区名]
2016-04-07 03:51:57,017 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-04-07 03:51:57,017 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 54, '根据经纬度获取地区名', '项目1-测试计划5', '项目1', 61, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"class":"Regeocoding","function":"test_regeocoding","method":"get","url":"/regeocoding?","params":[{"l":"39.938133,116.395739","type":"100"}]}', '{"name":"地安门外大街"}', 'Block', '', '')
2016-04-07 03:51:57,020 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-04-07 03:51:57,020 casestep.py[line: 58] INFO: 调用的方法为：Regeocoding.test_regeocoding
2016-04-07 03:51:57,020 regeocoding.py[line: 24] INFO: 正在发起GET请求...
2016-04-07 03:51:57,020 httpprotocol.py[line: 51] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/regeocoding?type=100&l=39.938133%2C116.395739
2016-04-07 03:51:57,088 regeocoding.py[line: 27] INFO: 正在解析返回结果
2016-04-07 03:51:57,089 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-04-07 03:51:57,090 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-04-07 03:51:57" WHERE executed_history_id = 20160407035151 AND testcase_id = 54 AND step_id = 61 AND project='项目1' AND testplan='项目1-测试计划5'
2016-04-07 03:51:57,099 testcase.py[line: 101] INFO: 测试用例[id=54, name=根据经纬度获取地区名]执行成功
2016-04-07 03:51:57,099 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-04-07 03:51:57,100 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-04-07 03:51:57" WHERE executed_history_id = 20160407035151 AND testcase_id = 54 AND project='项目1' AND testplan='项目1-测试计划5'
2016-04-07 03:51:57,302 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=64, bulid_version=测试计划1-Version1.0.2],对应用例[testcase_id=54]的执行结果
2016-04-07 03:51:57,872 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-04-07 03:51:57,872 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 58, '测试用例名2', '根据经纬度获取地区名接口', '项目1-测试计划5', '项目1', 'Block', '')
2016-04-07 03:51:57,875 testplan.py[line: 60] INFO: 开始执行测试用例[id=58，name=测试用例名2]
2016-04-07 03:51:57,875 testcase.py[line: 26] WARNING: 用例[name=测试用例名2]处于禁用状态[active=0]，不执行
2016-04-07 03:51:57,875 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-04-07 03:51:57,875 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Block", runtime="2016-04-07 03:51:57" WHERE executed_history_id = 20160407035151 AND testcase_id = 58 AND project='项目1' AND testplan='项目1-测试计划5'
2016-04-07 03:51:58,066 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=64, bulid_version=测试计划1-Version1.0.2],对应用例[testcase_id=58]的执行结果
2016-04-07 03:51:58,452 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-04-07 03:51:58,453 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 39, '获取ip信息接口', '根据地区名获取经纬度接口', '项目1-测试计划5', '项目1', 'Block', '')
2016-04-07 03:51:58,454 testplan.py[line: 60] INFO: 开始执行测试用例[id=39，name=获取ip信息接口]
2016-04-07 03:51:58,455 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-04-07 03:51:58,455 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 39, '获取ip信息接口', '项目1-测试计划5', '项目1', 41, 1, '', 'http', 'gc.ditu.aliyun.com', 80, '{"class":"IPQuery","function": "test_get_address_info","method":"get", "url":"/ipquery","params":""}', '{"city_name":"深圳市"}', 'Block', '', '')
2016-04-07 03:51:58,477 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-04-07 03:51:58,477 casestep.py[line: 58] INFO: 调用的方法为：IPQuery.test_get_address_info
2016-04-07 03:51:58,479 ipquery.py[line: 25] INFO: 正在发起GET请求...
2016-04-07 03:51:58,479 httpprotocol.py[line: 51] INFO: 发起的请求为：http://ip.ws.126.net:80/ipquery
2016-04-07 03:51:58,571 ipquery.py[line: 31] INFO: 正在更新步骤端口，主机，协议等配置信息: UPDATE case_step_report_tb SET protocol="http",host="ditu.amap.com", port="80"WHERE executed_history_id = 20160407035151 and testcase_id = 39 and step_id = 41
2016-04-07 03:51:58,572 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET protocol="http",host="ditu.amap.com", port="80"WHERE executed_history_id = 20160407035151 and testcase_id = 39 and step_id = 41
2016-04-07 03:51:58,585 ipquery.py[line: 34] INFO: 正在解析返回结果
2016-04-07 03:51:58,587 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-04-07 03:51:58,588 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-04-07 03:51:58" WHERE executed_history_id = 20160407035151 AND testcase_id = 39 AND step_id = 41 AND project='项目1' AND testplan='项目1-测试计划5'
2016-04-07 03:51:58,600 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-04-07 03:51:58,602 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160407035151', 39, '获取ip信息接口', '项目1-测试计划5', '项目1', 42, 2, '', 'http', 'gc.ditu.aliyun.com', 80, '{"class":"GeoCoding","function": "test_get_ip_info","method":"get", "url":"/geocoding?","params":[{"a":"$city_name"}]}', '{"lon":114.05786,"lat":22.54309}', 'Block', '', '')
2016-04-07 03:51:58,613 testcase.py[line: 60] INFO: 开始执行步骤操作[第2步]
2016-04-07 03:51:58,613 casestep.py[line: 58] INFO: 调用的方法为：GeoCoding.test_get_ip_info
2016-04-07 03:51:58,614 geocoding.py[line: 22] INFO: 正在发起GET请求...
2016-04-07 03:51:58,614 httpprotocol.py[line: 51] INFO: 发起的请求为：http://gc.ditu.aliyun.com:80/geocoding?a=%E6%B7%B1%E5%9C%B3%E5%B8%82
2016-04-07 03:51:58,698 geocoding.py[line: 37] INFO: 正在解析返回结果
2016-04-07 03:51:58,699 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-04-07 03:51:58,699 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-04-07 03:51:58" WHERE executed_history_id = 20160407035151 AND testcase_id = 39 AND step_id = 42 AND project='项目1' AND testplan='项目1-测试计划5'
2016-04-07 03:51:58,704 testcase.py[line: 101] INFO: 测试用例[id=39, name=获取ip信息接口]执行成功
2016-04-07 03:51:58,704 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-04-07 03:51:58,705 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-04-07 03:51:58" WHERE executed_history_id = 20160407035151 AND testcase_id = 39 AND project='项目1' AND testplan='项目1-测试计划5'
2016-04-07 03:51:58,945 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=64, bulid_version=测试计划1-Version1.0.2],对应用例[testcase_id=39]的执行结果
2016-04-07 03:51:59,148 testplan.py[line: 85] INFO: 测试计划[project=项目1 ,testplan=项目1-测试计划5]已执行完
2016-04-07 03:51:59,381 main.py[line: 124] INFO: 正在读取测项目[id：9, project：项目2]的协议，host，端口配置...
2016-04-07 03:51:59,382 main.py[line: 127] INFO: 成功读取配置信息：{"protocol":"http"}
2016-04-07 03:51:59,382 main.py[line: 138] ERROR: 测试项目[id：9, project：项目2]协议，host，端口信息配置错误,暂时无法执行：'host'
2016-04-07 03:51:59,589 main.py[line: 124] INFO: 正在读取测项目[id：22, project：项目3]的协议，host，端口配置...
2016-04-07 03:51:59,589 main.py[line: 127] INFO: 成功读取配置信息：
2016-04-07 03:51:59,590 main.py[line: 129] ERROR: 测试项目[id：22, project：项目3]未配置协议，host，端口信息，暂时无法执行
2016-04-07 03:51:59,777 main.py[line: 114] ERROR: 测试项目[project：项目4]获取失败，暂时无法执行：7011: Test Project (name:项目4) does not exist.
getTestProjectByName({'devKey': '965a88dd56a1fe1c4d0d7891ed87272d', 'testprojectname': '项目4'})
2016-04-07 03:51:59,778 main.py[line: 230] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-04-07 03:51:59,779 htmlreporter.py[line: 38] INFO: 正在查询测试用例总数
2016-04-07 03:51:59,779 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160407035151',)
2016-04-07 03:51:59,781 htmlreporter.py[line: 44] INFO: 正在查询执行通过的用例数
2016-04-07 03:51:59,781 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160407035151')
2016-04-07 03:51:59,784 htmlreporter.py[line: 50] INFO: 正在查询执行失败的用例数
2016-04-07 03:51:59,784 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160407035151')
2016-04-07 03:51:59,786 htmlreporter.py[line: 56] INFO: 正在查询执行出错的用例数
2016-04-07 03:51:59,786 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160407035151')
2016-04-07 03:51:59,788 htmlreporter.py[line: 62] INFO: 正在查询未执行的用例数
2016-04-07 03:51:59,788 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160407035151')
2016-04-07 03:51:59,790 htmlreporter.py[line: 73] INFO: 正在查询已运的测试计划
2016-04-07 03:51:59,790 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160407035151',)
2016-04-07 03:51:59,793 htmlreporter.py[line: 99] INFO: 正在查询测试计划[project：项目1, testplan：项目1-测试计划1]的测试用例执行结果
2016-04-07 03:51:59,793 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('项目1', '项目1-测试计划1', '20160407035151')
2016-04-07 03:51:59,796 htmlreporter.py[line: 106] INFO: 正在记录测试测试计划[project：项目1, testplan：项目1-测试计划1]的测试用例运行结果到测试报告
2016-04-07 03:51:59,797 htmlreporter.py[line: 99] INFO: 正在查询测试计划[project：项目1, testplan：项目1-测试计划5]的测试用例执行结果
2016-04-07 03:51:59,798 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('项目1', '项目1-测试计划5', '20160407035151')
2016-04-07 03:51:59,800 htmlreporter.py[line: 106] INFO: 正在记录测试测试计划[project：项目1, testplan：项目1-测试计划5]的测试用例运行结果到测试报告
2016-04-07 03:51:59,801 htmlreporter.py[line: 116] INFO: 正在查询已运的测试计划
2016-04-07 03:51:59,801 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160407035151',)
2016-04-07 03:51:59,803 htmlreporter.py[line: 128] INFO: 正在查询测试计划[project：项目1, testplan：项目1-测试计划1]已运行的测试用例
2016-04-07 03:51:59,803 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('项目1', '项目1-测试计划1', '20160407035151')
2016-04-07 03:51:59,806 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=54]步骤运行结果
2016-04-07 03:51:59,807 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划1', 54, '20160407035151')
2016-04-07 03:51:59,810 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=58]步骤运行结果
2016-04-07 03:51:59,810 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划1', 58, '20160407035151')
2016-04-07 03:51:59,813 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=39]步骤运行结果
2016-04-07 03:51:59,813 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划1', 39, '20160407035151')
2016-04-07 03:51:59,816 htmlreporter.py[line: 128] INFO: 正在查询测试计划[project：项目1, testplan：项目1-测试计划5]已运行的测试用例
2016-04-07 03:51:59,817 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('项目1', '项目1-测试计划5', '20160407035151')
2016-04-07 03:51:59,820 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=54]步骤运行结果
2016-04-07 03:51:59,820 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划5', 54, '20160407035151')
2016-04-07 03:51:59,824 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=58]步骤运行结果
2016-04-07 03:51:59,824 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划5', 58, '20160407035151')
2016-04-07 03:51:59,827 htmlreporter.py[line: 159] INFO: 正在查询测试用例[id=39]步骤运行结果
2016-04-07 03:51:59,827 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('项目1', '项目1-测试计划5', 39, '20160407035151')
2016-04-07 03:51:59,830 htmlreporter.py[line: 178] INFO: 正在设置测试报告结果文件名
2016-04-07 03:51:59,831 htmlreporter.py[line: 188] INFO: 测试报告文件名所在路径为：F:\\project\\report\\test_report20160407035151.html
2016-04-07 03:51:59,831 htmlreporter.py[line: 181] INFO: 正在生成测试报告
2016-04-07 03:51:59,837 main.py[line: 252] INFO: 生成测试报告成功
2016-04-07 03:52:01,075 main.py[line: 259] INFO: F:\\project\\report\\test_report20160407035151.html
2016-04-07 03:52:01,076 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-04-07 03:52:01,527 main.py[line: 266] INFO: 发送邮件成功
